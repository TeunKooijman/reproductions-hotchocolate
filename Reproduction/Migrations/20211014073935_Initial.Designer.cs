// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reproduction;

namespace Reproduction.Migrations
{
    [DbContext(typeof(MyDatabase))]
    [Migration("20211014073935_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reproduction.MyBaseEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MyBaseEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MyBaseEntity");
                });

            modelBuilder.Entity("Reproduction.MyAbility", b =>
                {
                    b.HasBaseType("Reproduction.MyBaseEntity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MyAbility_Name");

                    b.HasDiscriminator().HasValue("MyAbility");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f02c944c-9cd5-44b1-9567-eff6e051ada4"),
                            Name = "SomeAbility"
                        });
                });

            modelBuilder.Entity("Reproduction.MyBackground", b =>
                {
                    b.HasBaseType("Reproduction.MyBaseEntity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("MyBackground");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c316892-8b7d-47f8-9b96-b4da3418739c"),
                            Name = "SomeBackground"
                        });
                });

            modelBuilder.Entity("Reproduction.MyBackgroundEffectBinding", b =>
                {
                    b.HasBaseType("Reproduction.MyBaseEntity");

                    b.Property<Guid>("BackgroundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EffectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("EffectId");

                    b.HasDiscriminator().HasValue("MyBackgroundEffectBinding");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b43c3275-070c-4685-b496-bedf171c38b8"),
                            BackgroundId = new Guid("8c316892-8b7d-47f8-9b96-b4da3418739c"),
                            EffectId = new Guid("f7eb835e-4c39-4655-9545-61ced8bce356")
                        },
                        new
                        {
                            Id = new Guid("638d2005-d651-4939-af03-04bc7717e9bd"),
                            BackgroundId = new Guid("8c316892-8b7d-47f8-9b96-b4da3418739c"),
                            EffectId = new Guid("288e3587-7d6b-44c4-809d-872167d1940c")
                        });
                });

            modelBuilder.Entity("Reproduction.MyEffect", b =>
                {
                    b.HasBaseType("Reproduction.MyBaseEntity");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("MyEffect");
                });

            modelBuilder.Entity("Reproduction.MyTrait", b =>
                {
                    b.HasBaseType("Reproduction.MyBaseEntity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MyTrait_Name");

                    b.HasDiscriminator().HasValue("MyTrait");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d421e715-73e7-413a-907a-bff501a53f58"),
                            Name = "SomeTrait"
                        });
                });

            modelBuilder.Entity("Reproduction.MyAbilityEffect", b =>
                {
                    b.HasBaseType("Reproduction.MyEffect");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("AbilityId");

                    b.HasDiscriminator().HasValue("MyAbilityEffect");

                    b.HasData(
                        new
                        {
                            Id = new Guid("288e3587-7d6b-44c4-809d-872167d1940c"),
                            IsOptional = false,
                            AbilityId = new Guid("f02c944c-9cd5-44b1-9567-eff6e051ada4")
                        });
                });

            modelBuilder.Entity("Reproduction.MyTraitEffect", b =>
                {
                    b.HasBaseType("Reproduction.MyEffect");

                    b.Property<Guid>("TraitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("TraitId");

                    b.HasDiscriminator().HasValue("MyTraitEffect");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7eb835e-4c39-4655-9545-61ced8bce356"),
                            IsOptional = false,
                            TraitId = new Guid("d421e715-73e7-413a-907a-bff501a53f58")
                        });
                });

            modelBuilder.Entity("Reproduction.MyBackgroundEffectBinding", b =>
                {
                    b.HasOne("Reproduction.MyBackground", "Background")
                        .WithMany("Effects")
                        .HasForeignKey("BackgroundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reproduction.MyEffect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Background");

                    b.Navigation("Effect");
                });

            modelBuilder.Entity("Reproduction.MyAbilityEffect", b =>
                {
                    b.HasOne("Reproduction.MyAbility", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ability");
                });

            modelBuilder.Entity("Reproduction.MyTraitEffect", b =>
                {
                    b.HasOne("Reproduction.MyTrait", "Trait")
                        .WithMany()
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Trait");
                });

            modelBuilder.Entity("Reproduction.MyBackground", b =>
                {
                    b.Navigation("Effects");
                });
#pragma warning restore 612, 618
        }
    }
}
